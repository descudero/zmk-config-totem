//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Sym         1
#define Num         2

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        td_sk_to: tap_dance_sticky_to_layer {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&sk LEFT_SHIFT>, <&to 1>;
        };

        td_to: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp RGUI>, <&to 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
            &kp Q  &kp W  &kp E  &kp R      &kp T            &kp Y          &kp U      &kp I      &kp O    &kp P
            &kp A  &kp S  &kp D  &kp F      &kp G            &kp H          &kp J      &kp K      &kp L    &kp SEMICOLON
&kp ESCAPE  &kp Z  &kp X  &kp C  &kp V      &kp B            &kp N          &kp M      &kp COMMA  &kp DOT  &lt 7 SLASH    &kp LEFT_GUI
                          &to 1  &kp SPACE  &kp BACKSPACE    &kp BACKSPACE  &kp ENTER  &kp ENTER
            >;
        };

        Sym {
            label = "Sym";
            bindings = <
        &kp LEFT_BRACE  &kp AMPERSAND  &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans    &trans      &trans     &trans    &trans
        &kp COLON       &kp DOLLAR     &kp PERCENT           &kp CARET              &kp PLUS           &trans    &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI
&trans  &kp TILDE       &kp EXCL       &kp AT                &kp HASH               &kp PIPE           &trans    &trans      &trans     &trans    &trans    &trans
                                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &to Base  &trans      &trans
            >;
        };

        Num {
            label = "Num";
            bindings = <
        &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET    &trans    &trans      &trans     &trans    &trans
        &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL            &trans    &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI
&trans  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &trans    &trans      &trans     &trans    &trans    &trans
                                        &kp SQT       &kp NUMBER_0  &kp MINUS            &to Base  &trans      &trans
            >;
        };
    };
};
